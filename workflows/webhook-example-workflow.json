{
  "name": "Webhook Example Workflow",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "webhook-test",
        "options": {}
      },
      "id": "c3d4e5f6-7890-1234-5678-901234567890",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        720,
        300
      ],
      "webhookId": "12345678-1234-1234-1234-123456789012"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.body.action}}",
              "operation": "equal",
              "value2": "test"
            }
          ]
        }
      },
      "id": "d4e5f6g7-8901-2345-6789-012345678901",
      "name": "Check Action",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        940,
        300
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "status",
              "value": "success"
            },
            {
              "name": "message",
              "value": "Webhook received successfully!"
            },
            {
              "name": "received_data",
              "value": "={{JSON.stringify($json.body)}}"
            },
            {
              "name": "timestamp",
              "value": "={{new Date().toISOString()}}"
            }
          ]
        },
        "options": {}
      },
      "id": "e5f6g7h8-9012-3456-7890-123456789012",
      "name": "Success Response",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        1160,
        200
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "status",
              "value": "error"
            },
            {
              "name": "message",
              "value": "Invalid action. Expected 'test'"
            },
            {
              "name": "received_action",
              "value": "={{$json.body.action || 'none'}}"
            }
          ]
        },
        "options": {}
      },
      "id": "f6g7h8i9-0123-4567-8901-234567890123",
      "name": "Error Response",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        1160,
        400
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{$json}}",
        "options": {}
      },
      "id": "g7h8i9j0-1234-5678-9012-345678901234",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1380,
        300
      ]
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Check Action",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Action": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Success Response": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Response": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {},
  "versionId": "23456789-2345-2345-2345-234567890123",
  "id": "2",
  "meta": {
    "instanceId": "23456789012345678901234567890123"
  },
  "tags": [
    {
      "createdAt": "2024-01-15T10:00:00.000Z",
      "updatedAt": "2024-01-15T10:00:00.000Z",
      "id": "2",
      "name": "webhook"
    },
    {
      "createdAt": "2024-01-15T10:00:00.000Z",
      "updatedAt": "2024-01-15T10:00:00.000Z",
      "id": "3",
      "name": "api"
    }
  ]
}