{
  "name": "Rag Gemini Ollama Supabase Vector",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "id": "f13af0a4-02e8-41b4-9ad8-55443604f031",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        1400,
        820
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "id": "3a3a9bee-fd2c-48fb-a946-850bdd574b21",
      "name": "Extract from PDF",
      "type": "n8n-nodes-base.extractFromFile",
      "position": [
        1360,
        1100
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "42a44446-4cd9-4b8f-bcc8-dc912954e515",
      "name": "Extract from CSV",
      "type": "n8n-nodes-base.extractFromFile",
      "position": [
        1360,
        1300
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $json.concatenated_text }}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "file_id",
                "value": "={{ $('Set File ID').first().json.file_id}}"
              },
              {
                "name": "title",
                "value": "={{ $('Create Metadata Title & Description').item.json.output[0].title }}"
              },
              {
                "name": "description",
                "value": "={{ $('Create Metadata Title & Description').item.json.output[0].description }}"
              }
            ]
          }
        }
      },
      "id": "2141dbdd-4fce-4306-a852-581b138864e4",
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "position": [
        2700,
        1280
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1U_q2egTzc3eqgXcdxBln20DmH3qJLTrW",
          "mode": "list",
          "cachedResultName": "n8n_upload",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1U_q2egTzc3eqgXcdxBln20DmH3qJLTrW"
        },
        "event": "fileCreated",
        "options": {}
      },
      "id": "af8b85b1-1cfa-4b76-b94e-48213ae232d8",
      "name": "Google Drive Trigger File Created",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "position": [
        1100,
        820
      ],
      "typeVersion": 1,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "fe9DTRLN0yqFrKtj",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "separator": "###SPLIT###"
      },
      "id": "97304af3-3a09-4724-8e87-7fff0ece6eca",
      "name": "Character Text Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter",
      "position": [
        2640,
        1500
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0144a9a7-6e73-46c4-979f-838ad5c62b89",
              "name": "file_id",
              "type": "string",
              "value": "={{ $json.id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "af31206c-94e6-48fe-895e-f8a000486457",
      "name": "Set File ID",
      "type": "n8n-nodes-base.set",
      "position": [
        1660,
        840
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $('Set File ID').item.json.file_id }}"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {
              "docsToFormat": "application/pdf"
            }
          }
        }
      },
      "id": "580b1192-be67-46f1-aea4-ae1aaeab10ea",
      "name": "Download FIle",
      "type": "n8n-nodes-base.googleDrive",
      "position": [
        2060,
        840
      ],
      "typeVersion": 3,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "fe9DTRLN0yqFrKtj",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "e959d5a8-d311-4a29-b400-7c07468a72fe",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $binary.data.mimeType }}",
                    "rightValue": "application/pdf"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "application/pdf"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "d5ae6f2d-e62d-4e08-aa06-629e6dfa7ee8",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $binary.data.mimeType }}",
                    "rightValue": "text/csv"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "text/csv"
            }
          ]
        },
        "options": {}
      },
      "id": "af92c035-f1f0-47e4-b542-c13a7386892b",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "position": [
        1100,
        1120
      ],
      "typeVersion": 3.2
    },
    {
      "parameters": {
        "jsonSchemaExample": "[\n  {\n    \"title\": \"Test Title 1 (Replace it with real title)\",\n    \"description\": \"Test Description 1 (Replace it with real description)\"\n  },\n  {\n    \"title\": \"Test Title 2 (Replace it with real title)\",\n    \"description\": \"Test Description 2 (Replace it with real description)\"\n  },\n  {\n    \"title\": \"Test Title 3 (Replace it with real title)\",\n    \"description\": \"Test Description 3 (Replace it with real description)\"\n  }\n]\n"
      },
      "id": "1a2575ef-8792-4389-84ea-a016c5ba535e",
      "name": "Structured Output Parser",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "position": [
        2280,
        1280
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "modelName": "models/gemini-1.5-flash",
        "options": {}
      },
      "id": "0c8ba080-daab-493d-8c7d-4f1c7e9fb1e7",
      "name": "Google Gemini Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "position": [
        3000,
        1080
      ],
      "typeVersion": 1,
      "credentials": {
        "googlePalmApi": {
          "id": "FNTLr62FsyBeEYHP",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=<document> \n{{ $json.texts }}\n</document> \n\n<chunk> \n{{ $('Split into chunks').item.json.texts }}\n</chunk> \n\nโปรดดำเนินการดังต่อไปนี้:\n- สรุปและเขียนบริบท (context) สั้น ๆ เพื่ออธิบายว่า chunk ด้านล่างนี้อยู่ในส่วนใดของเอกสาร เพื่อช่วยในการค้นหาและดึงข้อมูลได้ดีขึ้น\n- คืนค่า chunk ดั้งเดิมเหมือนเดิมทุกประการ **เว้นแต่จำเป็นต้องแก้ไข**\n- หาก chunk มีตัวเลข เปอร์เซ็นต์ หรือชื่อหน่วยงานไม่สมบูรณ์ ให้ใช้ข้อมูลจากเอกสารฉบับเต็มในการเติมให้ครบ\n- หากเป็นเพียงบางส่วนของประโยคที่ถูกตัดออก ให้เติมคำที่หายไปเฉพาะในกรณีที่จำเป็นต่อความเข้าใจ\n- หาก chunk อยู่ในตาราง ให้แสดงทั้งแถวของตารางเพื่อรักษาความสมบูรณ์ของข้อมูล\n\n**รูปแบบการตอบกลับ:**\n[บริบทโดยย่อ] : [chunk ดั้งเดิม หรือฉบับแก้ไขถ้าจำเป็น]\n\n**คำตอบต้องอยู่ในภาษาไทยเท่านั้น** และ **อย่าเพิ่มคำอธิบายหรือรูปแบบใดๆ นอกเหนือจากที่ระบุ**\n"
      },
      "id": "e12a0a90-a1d7-4de0-901a-58ce35b95675",
      "name": "Process Context",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "position": [
        3080,
        840
      ],
      "typeVersion": 1.6
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"data\":  {{ JSON.stringify($json.text) }}\n} ",
        "options": {}
      },
      "id": "d6f500ba-c0f3-4cc8-af60-e2c38307582c",
      "name": "Document Data",
      "type": "n8n-nodes-base.set",
      "position": [
        1580,
        1100
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "fieldToSplitOut": "texts",
        "options": {
          "destinationFieldName": "texts"
        }
      },
      "id": "de223e76-1d95-41a9-b1ff-961d8b744044",
      "name": "Split Out",
      "type": "n8n-nodes-base.splitOut",
      "position": [
        2640,
        840
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "maxItems": 20
      },
      "id": "7d2eb334-a73c-4777-b4a9-757356201311",
      "name": "Limit",
      "type": "n8n-nodes-base.limit",
      "position": [
        2840,
        840
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "text",
              "separateBy": "other",
              "customSeparator": "###SPLIT###"
            }
          ]
        },
        "options": {}
      },
      "id": "d8f88a96-bed6-461a-ae5f-6924c655ba84",
      "name": "Summarize",
      "type": "n8n-nodes-base.summarize",
      "position": [
        3440,
        840
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "embeddingBatchSize": 1000,
        "options": {}
      },
      "id": "1a622d78-d5f1-498d-8882-1cbc9166e4b4",
      "name": "Add Data to Supabase Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "position": [
        2540,
        1080
      ],
      "typeVersion": 1.1,
      "credentials": {
        "supabaseApi": {
          "id": "ZD5kVhsLLzCXjP1P",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "modelName": "models/gemini-1.5-flash",
        "options": {}
      },
      "id": "51d8e196-8752-4fe7-a182-c4a00d3caefa",
      "name": "Google Gemini Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "position": [
        2060,
        1280
      ],
      "typeVersion": 1,
      "credentials": {
        "googlePalmApi": {
          "id": "FNTLr62FsyBeEYHP",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=โปรดสร้าง title และ description โดยอิงจากเนื้อหาเอกสารที่กำหนดไว้ด้านล่างนี้ จากข้อความนี้: {{ $json.output }}\nข้อมูลที่สร้างจะใช้สำหรับแยกข้อมูลในฐานข้อมูลเวกเตอร์ (vector DB) เพื่อการค้นคืนแบบ RAG\n\n\n**กรุณาตอบกลับเป็นภาษาไทยเท่านั้น**  \n**ไม่ต้องเพิ่มคำอธิบายใดๆ นอกเหนือจาก metadata title และ metadata description**\n",
        "hasOutputParser": true
      },
      "id": "d5ab29ee-d9a6-48c6-a2d5-20374cda6296",
      "name": "Create Metadata Title & Description",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "position": [
        2080,
        1100
      ],
      "typeVersion": 1.6
    },
    {
      "parameters": {
        "jsCode": "const chunkSize = 1000;\nconst chunkOverlap = 200;\n\n// รับข้อความจาก Node ก่อนหน้า\nconst rawText = $('AI Agent1').first().json.output;\n\n// ล้างข้อความ: ลบหมายเหตุในวงเล็บที่มีคำว่า \"ปรับ\"\nconst cleanedText = rawText.replace(/\\([^)]*?ปรับ[^)]*?\\)/g, \"\").trim();\n\nconst chunks = [];\nlet remainingText = cleanedText;\n\nwhile (remainingText.length > 0) {\n    let splitPoint = remainingText.lastIndexOf(\"\\n\\n\", chunkSize);\n    if (splitPoint === -1) splitPoint = remainingText.lastIndexOf(\". \", chunkSize);\n    if (splitPoint === -1) splitPoint = remainingText.lastIndexOf(\" \", chunkSize);\n    if (splitPoint === -1 || splitPoint < chunkSize * 0.5) splitPoint = chunkSize;\n\n    const chunk = remainingText.substring(0, splitPoint).trim();\n    chunks.push(chunk);\n\n    remainingText = remainingText.substring(Math.max(0, splitPoint - chunkOverlap)).trim();\n\n    if (remainingText.length < chunkSize * 0.2) {\n        chunks.push(remainingText);\n        break;\n    }\n}\n\n// ส่งออกแบบ array ตาม format ที่ Cohere Embed ต้องการ\nreturn [{\n  json: {\n    texts: chunks,\n    input_type: \"search_document\"\n  }\n}];\n\n"
      },
      "id": "8eddba99-f77b-4b85-b2ef-0aa68762b851",
      "name": "Split into chunks",
      "type": "n8n-nodes-base.code",
      "position": [
        2440,
        840
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolName": "documents",
        "toolDescription": "ใช้ค้นหาข้อมูลจากฐานข้อมูลเวกเตอร์ที่อยู่ใน Supabase เท่านั้น เครื่องมือนี้จะรับคำค้นหาแล้วคืนข้อความที่ใกล้เคียงที่สุดจากเอกสารในระบบ ห้ามสร้างคำตอบจากความรู้ของคุณเองโดยเด็ดขาด หากไม่พบข้อมูลที่ตรงกับคำถาม ให้บอกผู้ใช้ว่า \"นั่นไม่ใช่คำที่มีอยู่ในฐานข้อมูล\"\n\n",
        "tableName": {
          "__rl": true,
          "mode": "list",
          "value": "documents",
          "cachedResultName": "documents"
        },
        "topK": 1,
        "options": {}
      },
      "id": "03ae06b7-c804-4e35-bac5-17836123771a",
      "name": "Supabase Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "position": [
        2500,
        -400
      ],
      "typeVersion": 1.1,
      "credentials": {
        "supabaseApi": {
          "id": "ZD5kVhsLLzCXjP1P",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=นี้คือคำถาม {{ $json.chatInput }}\n\nกรุณาใช้เครื่องมือ `supabase_vector_store` เพื่อค้นหาข้อมูลจากเวกเตอร์ดาต้าเบสภายในองค์กรก่อน แล้วจึงตอบคำถามจากเนื้อหาที่ค้นเจอเท่านั้น\n\nห้ามเดาหรือสร้างคำตอบขึ้นมาเอง ถ้าไม่มีข้อมูลที่เกี่ยวข้อง ให้ตอบว่า:  \n\"นั่นไม่ใช่คำที่มีอยู่ในฐานข้อมูล\"\n\nถ้าพบข้อมูลบางส่วนแต่ยังไม่ชัดเจน คุณสามารถแจ้งให้ผู้ใช้เพิ่มคำค้นหรือให้บริบทเพิ่มเติมได้\n",
        "options": {
          "systemMessage": "=คุณคือผู้ช่วยภายในองค์กร ที่สามารถตอบคำถามได้โดยอิงจากข้อมูลในระบบเวกเตอร์ดาต้าเบสเท่านั้น\n\nคุณมีเครื่องมือชื่อว่า \"supabase_vector_store\" ซึ่งใช้สำหรับค้นหาข้อมูลจากเอกสารภายในองค์กรที่ถูกฝัง (embedding) ไว้ใน Supabase Vector Store\n\n**คำแนะนำ:**\n- ห้ามใช้ความรู้ทั่วไปของคุณในการตอบคำถาม\n- ต้องเรียกใช้เครื่องมือ `supabase_vector_store` ทุกครั้งก่อนจะตอบคำถาม\n- ถ้าผลลัพธ์จากเครื่องมือไม่มีข้อมูลที่เกี่ยวข้อง (`results` ว่างเปล่า) ให้ตอบว่า:  \n  \"นั่นไม่ใช่คำที่มีอยู่ในฐานข้อมูล\"\n- ห้ามเดา ห้ามแต่งเรื่อง และห้ามให้ข้อมูลจากแหล่งอื่นนอกเหนือจากที่เครื่องมือส่งมา\n\nกรุณาตอบกลับเป็นข้อความภาษาธรรมชาติที่อ่านง่าย ไม่แสดง JSON, โค้ด หรือโครงสร้างข้อมูลดิบใดๆ\n"
        }
      },
      "id": "c22f1100-86b0-4d49-b0b5-baa3f997c0a0",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        2240,
        -580
      ],
      "typeVersion": 1.8,
      "retryOnFail": false,
      "notesInFlow": false,
      "alwaysOutputData": false,
      "executeOnce": false,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "contextWindowLength": 10000
      },
      "id": "3fc29837-d177-4af0-a842-57705ef8b97d",
      "name": "Simple Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "position": [
        2360,
        -320
      ],
      "typeVersion": 1.3
    },
    {
      "parameters": {
        "model": "llama3.2:3b"
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOllama",
      "typeVersion": 1,
      "position": [
        2620,
        -240
      ],
      "id": "a6c21a44-4819-43bd-85be-416ef33975c3",
      "name": "Embeddings Ollama",
      "credentials": {
        "ollamaApi": {
          "id": "Hi7miBi58yqfRL36",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "model": "llama3.2:3b"
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOllama",
      "typeVersion": 1,
      "position": [
        2520,
        1280
      ],
      "id": "579a6544-3465-44be-aea3-1a84ed792563",
      "name": "Embeddings Ollama1",
      "credentials": {
        "ollamaApi": {
          "id": "Hi7miBi58yqfRL36",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "model": "llama3.2:3b",
        "options": {
          "topK": -1
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        2160,
        -320
      ],
      "id": "976a44b1-6efc-480e-8505-3813ba5e172b",
      "name": "Ollama Chat Model",
      "credentials": {
        "ollamaApi": {
          "id": "Hi7miBi58yqfRL36",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=ช่วยแก้ไขคำผิด {{ $('Document Data').item.json.data }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        1780,
        1100
      ],
      "id": "8e1725c4-3a47-4e24-b12b-0e625c3f7cc1",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1740,
        1280
      ],
      "id": "2f8c5206-5e16-48db-b4b6-af65d6a84cb9",
      "name": "Google Gemini Chat Model2",
      "credentials": {
        "googlePalmApi": {
          "id": "FNTLr62FsyBeEYHP",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        1860,
        -560
      ],
      "id": "55382758-2eed-4dc8-b223-535ff803ab8e",
      "name": "When chat message received",
      "webhookId": "2efcb9bb-de81-475c-a78b-93b8705197be"
    }
  ],
  "pinData": {},
  "connections": {
    "Limit": {
      "main": [
        [
          {
            "node": "Process Context",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Extract from PDF",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from CSV",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [],
        []
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Summarize": {
      "main": [
        [
          {
            "node": "Add Data to Supabase Vector Store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set File ID": {
      "main": [
        [
          {
            "node": "Download FIle",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Document Data": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download FIle": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Set File ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Context": {
      "main": [
        [
          {
            "node": "Summarize",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from CSV": {
      "main": [
        [
          {
            "node": "Document Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from PDF": {
      "main": [
        [
          {
            "node": "Document Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split into chunks": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Add Data to Supabase Vector Store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Process Context",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Create Metadata Title & Description",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Create Metadata Title & Description",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Google Drive Trigger File Created": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Metadata Title & Description": {
      "main": [
        [
          {
            "node": "Split into chunks",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Ollama": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Ollama1": {
      "ai_embedding": [
        [
          {
            "node": "Add Data to Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Create Metadata Title & Description",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {},
  "versionId": "d5e8a896-c3a7-4dcc-b825-5874352438df",
  "meta": {
    "templateId": "4551",
    "templateCredsSetupCompleted": true,
    "instanceId": "b0fdbd353b3d60f56600de4b356895824c257be7a727c065cd1e7a122c4e9aff"
  },
  "id": "e6p1Fs9D59gg3gTN",
  "tags": []
}